/* -------------------------------------------------------------- 
	Forms
-------------------------------------------------------------- */
fieldset {
    border: 0;
    margin: 0;
    min-width: 0; // Chrome and Firefox set a `min-width: -webkit-min-content;` on fieldsets, so we reset that to ensure it behaves more like a standard block element. See https://github.com/twbs/bootstrap/issues/12359.
    padding: 0;
}

legend {
    @include font-rem(2.1);
    border: 0;
    border-bottom: 1px solid #e5e5e5;
    color: #333;
    display: block;
    line-height: inherit;
    margin-bottom: 20px;
    padding: 0;
    width: 100%;
}

label {
    display: inline-block;
    font-weight: 700;
    margin-bottom: 5px;
    max-width: 100%;  // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
}

// Override content-box in Normalize (* isn't specific enough)
input[type="search"] {
    @include box-sizing(border-box);
    -webkit-appearance: none;
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
    line-height: normal;
    margin: 4px 0 0;
    margin-top: 1px \9; /* IE8-9 */
}

// Set the height of select and file controls to match text inputs
input[type="file"] {
    display: block;
}

// Adjust output element
output {
    @include font-rem(1.4);
    display: block;
    padding-top: 7px;
    line-height: $line-height-base;
    color: #333;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
    height: auto;
}

// Fix optgroup Firefox bug per https://github.com/twbs/bootstrap/issues/7611
select optgroup {
    font-family: inherit;
    font-size: inherit;
    font-style: inherit;
}

// Fix for Chrome number input
// Setting certain font-sizes causes the `I` bar to appear on hover of the bottom increment button.
// See https://github.com/twbs/bootstrap/issues/8350 for more.
input[type="number"] {
    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
        height: auto;
    }
}

input,
select,
textarea {
    @include font-rem(1.4);
    @include transition(border 150ms ease-out);
    background-color: #fff;
    background-image: none;
    border: 1px solid #ccc;
    border-radius: 3px;
    color: #555;
    display: block;
    height: 34px;
    line-height: $line-height-base;
    padding: 6px 12px;
    width: 100%;
    
    &:focus {
        border-color: #66afe9;
        outline: 0;
    }
    &::-moz-placeholder {
        color: #999;
        opacity: 1;
    }
    &:-ms-input-placeholder,
    &::-webkit-input-placeholder {
        color: #999;
    }
    
    &[disabled],
    &[readonly] {
        background-color: #eee;
        cursor: not-allowed;
        opacity: 1;
    }
}


/*
    Need to separate out the :not() selector from the rest of the CSS 2.1 selectors
    since IE8 won't execute CSS that contains a CSS3 selector.
*/
input:not([type]):focus {
    border-color: #66afe9;
    outline: 0;
}

fieldset[disabled]  {
    input,
    select,
    textarea {
        background-color: #eee;
        cursor: not-allowed;
        opacity: 1;
    }
}

/*** Native invalid styles ***/
input,
textarea,
select {
    &:focus {
        &:invalid {
            border-color: #ee5f5b;
            color: #b94a48;
            
            &:focus {
                border-color: #e9322d;
            }
        }
    }
}
input[type="file"],
input[type="radio"],
input[type="checkbox"] {
    &:focus {
        &:invalid {           
            &:focus {
                outline-color: #e9322d;
            }
        }
    }
}


/*** Special styles for iOS temporal inputs ***/

// In Mobile Safari, setting `display: block` on temporal inputs causes the
// text within the input to become vertically misaligned.
// As a workaround, we set a pixel line-height that matches the
// given height of the input. Since this fucks up everything else, we have to
// appropriately reset it for Internet Explorer and the size variations.

input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"] {
    line-height: 34px;
}



/*** Form groups ***/

// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.
.form_group {
    margin-bottom: 15px;
}


/*** Checkboxes and radios ***/

// Indent the labels to position radios/checkboxes as hanging controls.
.radio,
.checkbox {
    display: block;
    margin-bottom: 10px;
    margin-top: 10px;
    min-height: 16px; // clear the floating input if there is no label text
    padding-left: 20px;
    vertical-align: middle;
    
    label {
        cursor: pointer;
        display: inline;
        font-weight: normal;
        margin-bottom: 0;
    }
}
.radio input[type="radio"],
.radio_inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox_inline input[type="checkbox"] {
    float: left;
    margin-left: -20px;
}
.radio + .radio,
.checkbox + .checkbox {
    margin-top: -5px; // Move up sibling radios or checkboxes for tighter spacing
}


/*** Radios and checkboxes on same line ***/
.radio_inline,
.checkbox_inline {
    cursor: pointer;
    display: inline-block;
    font-weight: normal;
    margin-bottom: 0;
    padding-left: 20px;
    vertical-align: middle;
}
.radio_inline + .radio_inline,
.checkbox_inline + .checkbox_inline {
    margin-left: 10px; // space out consecutive inline controls
    margin-top: 0;
}


/*** Apply same disabled cursor tweak as for inputs ***/

// Note: Neither radios nor checkboxes can be readonly.
input[type="radio"],
input[type="checkbox"],
.radio,
.radio_inline,
.checkbox,
.checkbox_inline {
    &[disabled],
    fieldset[disabled] & {
        cursor: not-allowed;
    }
}


/*** Static form control text ***/

// Apply class to a `p` element to make any string of text align with labels in
// a horizontal form layout.
.form_control_static {
    margin-bottom: 0; // Remove default margin from `p`
    padding-top: 17px;
}


/*** Help text ***/

// Apply to any element you wish to create light text for placement immediately
// below a form control. Use for general help, formatting, or instructional text.
.help_block {
	color: lighten(#252525, 25%); // lighten the text some for contrast
    display: block; // account for any element using help-block
    margin-bottom: 10px;
    margin-top: 5px;
}


/*** Horizontal forms ***/

// Horizontal forms are built on grid classes and allow you to create forms with
// labels on the left and inputs on the right.
.form_horizontal {
    // Consistent vertical alignment of labels, radios, and checkboxes
    .control_label,
    .radio,
    .checkbox,
    .radio_inline,
    .checkbox_inline {
        margin-bottom: 0;
        margin-top: 0;
        padding-top: 17px; // Default padding plus a border
    }

    // Make form groups behave like rows
    .form_group {
        display: block;
        width: 100%;
    }
}