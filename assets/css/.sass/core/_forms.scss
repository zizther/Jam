// Restyle and baseline non-control form elements.
fieldset {
    padding: 0;
    margin: 0;
    border: 0;
}

legend {
    display: block;
    width: 100%;
    padding: 0;
    margin-bottom: 16px;
    font-size: 22px;
    line-height: inherit;
    color: #252525;
    border: 0;
}

label {
    display: inline-block;
    margin-bottom: 5px;
    font-weight: bold;
}

// Override content-box in Normalize (* isn't specific enough)
input[type="search"] {
    @include box-sizing(border-box);
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
    margin: 4px 0 0;
    margin-top: 1px \9; /* IE8-9 */
    line-height: normal;
}

// Set the height of select and file controls to match text inputs
input[type="file"] {
    display: block;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
    height: auto;
}

// Fix optgroup Firefox bug per https://github.com/twbs/bootstrap/issues/7611
select optgroup {
    font-size: inherit;
    font-style: inherit;
    font-family: inherit;
}

// Fix for Chrome number input
// Setting certain font-sizes causes the `I` bar to appear on hover of the bottom increment button.
// See https://github.com/twbs/bootstrap/issues/8350 for more.
input[type="number"] {
    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
        height: auto;
    }
}


// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.
.form_group {
    margin-bottom: 15px;
}


// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging controls.
.radio,
.checkbox {
    display: block;
    min-height: 16px; // clear the floating input if there is no label text
    margin-top: 10px;
    margin-bottom: 10px;
    padding-left: 20px;
    vertical-align: middle;
    
    label {
        display: inline;
        margin-bottom: 0;
        font-weight: normal;
        cursor: pointer;
    }
}
.radio input[type="radio"],
.radio_inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox_inline input[type="checkbox"] {
    float: left;
    margin-left: -20px;
}
.radio + .radio,
.checkbox + .checkbox {
    margin-top: -5px; // Move up sibling radios or checkboxes for tighter spacing
}

// Radios and checkboxes on same line
.radio_inline,
.checkbox_inline {
    display: inline-block;
    padding-left: 20px;
    margin-bottom: 0;
    vertical-align: middle;
    font-weight: normal;
    cursor: pointer;
}
.radio_inline + .radio_inline,
.checkbox_inline + .checkbox_inline {
    margin-top: 0;
    margin-left: 10px; // space out consecutive inline controls
}

// Apply same disabled cursor tweak as for inputs
//
// Note: Neither radios nor checkboxes can be readonly.
input[type="radio"],
input[type="checkbox"],
.radio,
.radio_inline,
.checkbox,
.checkbox_inline {
    &[disabled],
    fieldset[disabled] & {
        cursor: not-allowed;
    }
}


// Form control feedback states
//
// Apply contextual and semantic states to individual form controls.

// Warning
.has_warning {
	background: $message-warning-bg;
	border: $message-warning-text;
    color: $message-warning-text;
}
// Error
.has_error {
    background: $message-danger-bg; 
	border: $message-danger-text;
    color: $message-danger-text;
}
// Success
.has_success {
	background: $message-success-bg;
	border: $message-success-text;
    color: $message-success-text;
}


// Static form control text
//
// Apply class to a `p` element to make any string of text align with labels in
// a horizontal form layout.
.form_control_static {
    margin-bottom: 0; // Remove default margin from `p`
    padding-top: 17px;
}


// Help text
//
// Apply to any element you wish to create light text for placement immediately
// below a form control. Use for general help, formatting, or instructional text.
.help_block {
	color: lighten(#252525, 25%); // lighten the text some for contrast
    display: block; // account for any element using help-block
    margin-top: 5px;
    margin-bottom: 10px;
}


// Horizontal forms
//
// Horizontal forms are built on grid classes and allow you to create forms with
// labels on the left and inputs on the right.
.form_horizontal {
    // Consistent vertical alignment of labels, radios, and checkboxes
    .control_label,
    .radio,
    .checkbox,
    .radio_inline,
    .checkbox_inline {
        margin-bottom: 0;
        margin-top: 0;
        padding-top: 17px; // Default padding plus a border
    }

    // Make form groups behave like rows
    .form_group {
        display: block;
        width: 100%;
    }
}