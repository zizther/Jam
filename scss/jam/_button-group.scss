/* --------------------------------------------------------------
	Button group
-------------------------------------------------------------- */
// Make the div behave like a button
.btn-group,
.btn-group-vertical {
    display: inline-block;
    position: relative;
    vertical-align: middle; // match .btn alignment given font-size hack above

    > .btn {
        float: left;
        position: relative;

        // Bring the "active" button to the front
        &:focus,
        &:active,
        &.active {
            z-index: 2;
        }
        @include hover {
            z-index: 2;
        }
    }
}

// Prevent double borders when buttons are next to each other
.btn-group {
    .btn + .btn,
    .btn + .btn-group,
    .btn-group + .btn,
    .btn-group + .btn-group {
        margin-left: -$input-btn-border-width;
    }
}

// Optional: Group multiple button groups together for a toolbar
.btn-toolbar {
    @include clearfix;
    margin-left: -$btn-toolbar-margin; // Offset the first child's margin

    .btn-group,
    .input-group {
        float: left;
    }

    > .btn,
    > .btn-group,
    > .input-group {
        margin-left: $btn-toolbar-margin;
    }
}

.btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) {
    border-radius: 0;
}

// Set corners individual because sometimes a single button can be in a .btn-group and we need :first-child and :last-child to both match
.btn-group > .btn:first-child {
    margin-left: 0;

    &:not(:last-child):not(.dropdown-toggle) {
      @include border-right-radius(0);
    }
}
// Need .dropdown-toggle since :last-child doesn't apply given a .dropdown-menu immediately after it
.btn-group > .btn:last-child:not(:first-child),
.btn-group > .dropdown-toggle:not(:first-child) {
    @include border-left-radius(0);
}

// Custom edits for including btn-groups within btn-groups (useful for including dropdown buttons within a btn-group)
.btn-group > .btn-group {
    float: left;
}
.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn {
    border-radius: 0;
}
.btn-group > .btn-group:first-child:not(:last-child) {
    > .btn:last-child,
    > .dropdown-toggle {
        @include border-right-radius(0);
    }
}
.btn-group > .btn-group:last-child:not(:first-child) > .btn:first-child {
    @include border-left-radius(0);
}

// On active and open, don't show outline
.btn-group .dropdown-toggle:active,
.btn-group.open .dropdown-toggle {
    outline: 0;
}

// Sizing
// Remix the default button sizing classes into new ones for easier manipulation.
.btn-group-sm > .btn { @extend .btn-sm; }
.btn-group-lg > .btn { @extend .btn-lg; }

// Vertical button groups
.btn-group-vertical {
    > .btn,
    > .btn-group,
    > .btn-group > .btn {
        display: block;
        float: none;
        max-width: 100%;
        width: 100%;
    }

    // Clear floats so dropdown menus can be properly placed
    > .btn-group {
        @include clearfix;

        > .btn {
            float: none;
        }
    }

    > .btn + .btn,
    > .btn + .btn-group,
    > .btn-group + .btn,
    > .btn-group + .btn-group {
        margin-top: -$input-btn-border-width;
        margin-left: 0;
    }
}

.btn-group-vertical > .btn {
    &:not(:first-child):not(:last-child) {
      border-radius: 0;
    }
    &:first-child:not(:last-child) {
      @include border-bottom-radius(0);
    }
    &:last-child:not(:first-child) {
      @include border-top-radius(0);
    }
}
.btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn {
    border-radius: 0;
}
.btn-group-vertical > .btn-group:first-child:not(:last-child) {
    > .btn:last-child,
    > .dropdown-toggle {
        @include border-bottom-radius(0);
    }
}
.btn-group-vertical > .btn-group:last-child:not(:first-child) > .btn:first-child {
    @include border-top-radius(0);
}
